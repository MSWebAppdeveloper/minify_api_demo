openapi: 3.0.1
info:
  title: EzzyBillApiDemo
  version: '1.0'
paths:
  /api/Customers:
    get:
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          text/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/Customers/{id}:
    get:
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          text/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /api/Customers/search:
    get:
      tags:
        - Customers
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /api/Customers/count:
    get:
      tags:
        - Customers
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Docs/ping:
    get:
      tags:
        - Docs
      responses:
        '200':
          description: OK
  /WeatherForecast:
    get:
      tags:
        - WeatherForecast
      operationId: GetWeatherForecast
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
components:
  schemas:
    Customer:
      required:
        - city
        - email
        - fullName
        - phone
      type: object
      properties:
        id:
          type: integer
          format: int32
        fullName:
          maxLength: 100
          minLength: 0
          type: string
        email:
          maxLength: 100
          minLength: 0
          type: string
        phone:
          maxLength: 100
          minLength: 0
          type: string
        city:
          maxLength: 100
          minLength: 0
          type: string
      additionalProperties: false
    WeatherForecast:
      type: object
      properties:
        date:
          type: string
          format: date
        temperatureC:
          type: integer
          format: int32
        temperatureF:
          type: integer
          format: int32
          readOnly: true
        summary:
          type: string
          nullable: true
      additionalProperties: false
